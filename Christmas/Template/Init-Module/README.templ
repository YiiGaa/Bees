######README######
# @@module@@-说明

主要功能包括：
-

模块参数的值说明：
- 如果希望设置的值为固定值，则直接设置对应类型的值即可
- 如果希望从`passParam`中动态获取值作为设置的值，则请以`get##key`作为模块参数的设置值
- 如果想要获取的值在passParam的里层（嵌套json），则请以`>>`定位，如`get##key_1>>key_2`

# ※ action-说明
- 组入版本：1.0=0000.00.00

```json
{
	"name":"@@module@@",
	"param":{
		"_action":""
	}
}
```

| key | 说明 | 是否必要 | 默认值 | 类型 | 组入/更新版本 |
| --- | --- | --- | --- | --- | --- |
| _action | 固定为"" | 否 |  | String | 1.0=0000.00.00 |

模块参数补充说明：

### > _xxx
- 说明

# ◎ 模块单独测试

在工程根目录，运行shell指令

```
python3 Christmas/Christmas.py ShellExcute/Build#Module @@module@@
```

也可以通过`Christmas插件`运行`ShellExcute>>Build#Module`，并在插件打开的终端中输入`@@module@@`

`sample.cpp`是专门用于单独测试的代码

模块编译后会自动运行，编译的可执行文件生成在`/Build/sample`


# ◎ 更新列表

**1.0=0000.00.00**

- 模块建立
######README######

######README-en######
# @@module@@-explain

The main functions include:
-

Description of the value of module parameters:
- If the value you want to set is a fixed value, you can directly set the value of the corresponding type.
- If you want to dynamically obtain the value from `passParam` as the set value, please use `get##key` as the setting value of the module parameter.
- If the value you want to get is in the inner layer of passParam (nested json), please locate it with `>>`, such as `get##key_1>>key_2`

# ※ action-explain

- Add version: 1.0=0000.00.00

```json
{
	"name":"@@module@@",
	"param":{
		"_action":""
	}
}
```

| Key    | Description                           | Necessary | Default | Type   | Add/Update     |
| ------ | ------------------------------------- | --------- | ------- | ------ | -------------- |
| action | Specify the module behavior, fixed to "" | Yes       |         | String | 1.0=0000.00.00 |

Supplementary description of module parameters:

### > _xxx
- explain

# ◎ Module test separately

In the project root directory, run the shell instruction

```
python3 Christmas/Christmas.py ShellExcute/Build#Module @@module@@
```

You can also run `ShellExcute>>Build#Module` through the `Christmas` plug-in, and enter `@@module@@` in the terminal opened by the plug-in

`Sample.html`is a code specifically for separate testing

The module will run automatically after compilation, and the compiled executable file will be generated in `/Build/sample`


# ◎ Update list

**1.0=0000.00.00**

- Module create
######README-en######