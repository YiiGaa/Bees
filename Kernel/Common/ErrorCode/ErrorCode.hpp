/*
* 本文件内容不要人为修改，本文件由"python3 Christmas.py Input/MergeCode/LinkModule"生成
* 如果再次运行生成脚本，人为修改的代码将被删除
* 
* The contents of this file should not be modified. This file is generated by "python3 Christmas.py Input/MergeCode/LinkModule"
* If the generation script is run again, the artificially modified code will be deleted
*/

#ifndef  _COMMON_ERRORCODE_HPP_
#define  _COMMON_ERRORCODE_HPP_

#define ERRORCODE_IsError(...) Common::ErrorCode::IsErrorHappened(__VA_ARGS__)
#define ERRORCODE_GetCode(param) Common::ErrorCode::GetErrorCode(param)
#define ERRORCODE_GetMessage(param) Common::ErrorCode::GetErrorMessage(param)

#include <map>
#include <string>
#include <vector>

enum ERROR_CODE{
    ERR_OK = 0,
    ERR_Start = -2147483646,
    ERR_Skip,
    ERR_ModuleLack,
    ERR_Task_Switch_Lack,

    ERR_Module__BrokerLogger_Exception,
    ERR_Module__BrokerLogger_Action_Illegal,
    ERR_Module__DataQueue_Exception,
    ERR_Module__DataQueue_Action_Illegal,
    ERR_Module__DataQueue_DataCreate_Exist,
    ERR_Module__DataQueue_DataDelete_NotExist,
    ERR_Module__DataQueue_DataGet_Fail,
    ERR_Module__DataQueue_Push_TimoutOutCall_Lack,
    ERR_Module__DataQueue_Push_End,
    ERR_Module__DataQueue_Pull_Empty,
    ERR_Module__DataQueue_Pull_End,
    ERR_Module__DataQueue_Pull_TimoutOutCall_Lack,
    ERR_Module__DataQueue_PullOnlyPop_Found_Block,
    ERR_Module__DataFilling_Exception,
    ERR_Module__DataFilling_Action_Illegal,
    ERR_Module__DataFilling_Switch_Null,
    ERR_Module__DataCheck_Exception,
    ERR_Module__DataCheck_ParamLack,
    ERR_Module__DataCheck_SettingIllegal,
    ERR_Module__DataCheck_ParamTypeIllegal,
    ERR_Module__DataCheck_ArrayLimit,
    ERR_Module__DataCheck_ParamIllegal,
    ERR_Module__BrokerCall_Exception,
    ERR_Module__BrokerCall_Action_Illegal,
    ERR_Module__BrokerCall_DataDelete_NotExist,
    ERR_Module__BrokerCall_DataGet_Fail,
    ERR_Module__BrokerCall_Call_Lack,
    ERR_Module__ServerHttp_Exception,
    ERR_Module__ServerHttp_Url_Illegal,
    ERR_Module__ServerHttp_Method_Illegal,
    ERR_Module__ServerHttp_Connect_Fail,
    ERR_Module__ServerHttp_Response_Fail,
    ERR_Module__BrokerThread_Exception,
    ERR_Module__BrokerThread_Action_Illegal,
    ERR_Module__BrokerThread_DataCreate_Fail,
    ERR_Module__BrokerThread_DataDelete_NotExist,
    ERR_Module__BrokerThread_DataGet_Fail,
    ERR_Module__BrokerThread_Create_Lack,
};

namespace Common{
    class ErrorCode {
        public:
            static int IsErrorHappened(ERROR_CODE param);
            static int IsErrorHappened(ERROR_CODE &param, std::vector<ERROR_CODE> ignore);
            static std::string GetErrorCode(ERROR_CODE param);
            static std::string GetErrorMessage(ERROR_CODE param);
            static std::map<ERROR_CODE, std::vector<std::string>> errorMap;
    };
}
#endif